{"changed":true,"filter":false,"title":"calc_weight_json.py","tooltip":"/calc_weight_json.py","value":"#creating main program\nimport jsonFileHandler\n\ndata = jsonFileHandler.readJsonFile('file/insulin.json')\n\nif data != \"\" :\n    bInsulin = data['molecules']['bInsulin']\n    aInsulin = data['molecules']['aInsulin']\n    insulin = bInsulin + aInsulin\n    molecularWeightInsulinActual = data['molecularWeightInsulinActual']\n    print('bInsulin: ' + bInsulin)\n    print('aInsulin: ' + aInsulin)\n    print('molecularWeightInsulinActual: ' + str(molecularWeightInsulinActual))\nelse:\n    print(\"Error. Exiting program\")\n    \n# Calculating the molecular weight of insulin  \n# Getting a list of the amino acid (AA) weights  \naaWeights = data['weights']\n# Count the number of each amino acids  \naaCountInsulin = ({x: float(insulin.upper().count(x)) for x in ['A','C','D', 'E', 'F', 'G', 'H', 'I', 'K', 'L', 'M', 'N', 'P', 'Q', 'R','S', 'T','V', 'W', 'Y']})  \n# Multiply the count by the weights  \nmolecularWeightInsulin = sum({x: (aaCountInsulin[x]*aaWeights[x]) for x in\n['A', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'K', 'L', 'M', 'N', 'P', 'Q', 'R','S', 'T', 'V', 'W', 'Y']}.values())  \nprint(\"The rough molecular weight of insulin: \" +\nstr(molecularWeightInsulin))\nprint(\"Percent error: \" + str(((molecularWeightInsulin - molecularWeightInsulinActual)/molecularWeightInsulinActual)*100))","undoManager":{"mark":24,"position":24,"stack":[[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["import jsonFileHandler",""],"id":84}],[{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":85}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":86}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["#"],"id":87},{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["c"]},{"start":{"row":0,"column":2},"end":{"row":0,"column":3},"action":"insert","lines":["r"]}],[{"start":{"row":0,"column":3},"end":{"row":0,"column":4},"action":"insert","lines":["e"],"id":88},{"start":{"row":0,"column":4},"end":{"row":0,"column":5},"action":"insert","lines":["a"]},{"start":{"row":0,"column":5},"end":{"row":0,"column":6},"action":"insert","lines":["t"]},{"start":{"row":0,"column":6},"end":{"row":0,"column":7},"action":"insert","lines":["i"]},{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"insert","lines":["n"]},{"start":{"row":0,"column":8},"end":{"row":0,"column":9},"action":"insert","lines":["g"]}],[{"start":{"row":0,"column":9},"end":{"row":0,"column":10},"action":"insert","lines":[" "],"id":89},{"start":{"row":0,"column":10},"end":{"row":0,"column":11},"action":"insert","lines":["m"]},{"start":{"row":0,"column":11},"end":{"row":0,"column":12},"action":"insert","lines":["a"]},{"start":{"row":0,"column":12},"end":{"row":0,"column":13},"action":"insert","lines":["i"]},{"start":{"row":0,"column":13},"end":{"row":0,"column":14},"action":"insert","lines":["n"]}],[{"start":{"row":0,"column":14},"end":{"row":0,"column":15},"action":"insert","lines":[" "],"id":90},{"start":{"row":0,"column":15},"end":{"row":0,"column":16},"action":"insert","lines":["p"]},{"start":{"row":0,"column":16},"end":{"row":0,"column":17},"action":"insert","lines":["r"]},{"start":{"row":0,"column":17},"end":{"row":0,"column":18},"action":"insert","lines":["o"]},{"start":{"row":0,"column":18},"end":{"row":0,"column":19},"action":"insert","lines":["g"]},{"start":{"row":0,"column":19},"end":{"row":0,"column":20},"action":"insert","lines":["r"]}],[{"start":{"row":0,"column":20},"end":{"row":0,"column":21},"action":"insert","lines":["a"],"id":91},{"start":{"row":0,"column":21},"end":{"row":0,"column":22},"action":"insert","lines":["m"]}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["",""],"id":92}],[{"start":{"row":3,"column":0},"end":{"row":3,"column":57},"action":"insert","lines":["data = jsonFileHandler.readJsonFile('files/insulin.json')"],"id":93}],[{"start":{"row":3,"column":57},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":94}],[{"start":{"row":5,"column":0},"end":{"row":14,"column":35},"action":"insert","lines":["if data != \"\" :","    bInsulin = data['molecules']['bInsulin']","    aInsulin = data['molecules']['aInsulin']","    insulin = bInsulin + aInsulin","    molecularWeightInsulinActual = data['molecularWeightInsulinActual']","    print('bInsulin: ' + bInsulin)","    print('aInsulin: ' + aInsulin)","    print('molecularWeightInsulinActual: ' + str(molecularWeightInsulinActual))","else:","    print(\"Error. Exiting program\")"],"id":95}],[{"start":{"row":3,"column":57},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":96}],[{"start":{"row":5,"column":0},"end":{"row":5,"column":1},"action":"insert","lines":["#"],"id":97}],[{"start":{"row":15,"column":35},"end":{"row":16,"column":0},"action":"insert","lines":["",""],"id":98},{"start":{"row":16,"column":0},"end":{"row":16,"column":4},"action":"insert","lines":["    "]},{"start":{"row":16,"column":4},"end":{"row":17,"column":0},"action":"insert","lines":["",""]},{"start":{"row":17,"column":0},"end":{"row":17,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":17,"column":0},"end":{"row":17,"column":4},"action":"remove","lines":["    "],"id":99}],[{"start":{"row":17,"column":0},"end":{"row":27,"column":122},"action":"insert","lines":["# Calculating the molecular weight of insulin  ","# Getting a list of the amino acid (AA) weights  ","aaWeights = data['weights']","# Count the number of each amino acids  ","aaCountInsulin = ({x: float(insulin.upper().count(x)) for x in ['A','C','D', 'E', 'F', 'G', 'H', 'I', 'K', 'L', 'M', 'N', 'P', 'Q', 'R','S', 'T','V', 'W', 'Y']})  ","# Multiply the count by the weights  ","molecularWeightInsulin = sum({x: (aaCountInsulin[x]*aaWeights[x]) for x in","['A', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'K', 'L', 'M', 'N', 'P', 'Q', 'R','S', 'T', 'V', 'W', 'Y']}.values())  ","print(\"The rough molecular weight of insulin: \" +","str(molecularWeightInsulin))","print(\"Percent error: \" + str(((molecularWeightInsulin - molecularWeightInsulinActual)/molecularWeightInsulinActual)*100))"],"id":100}],[{"start":{"row":5,"column":0},"end":{"row":5,"column":1},"action":"remove","lines":["#"],"id":101},{"start":{"row":4,"column":0},"end":{"row":5,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":18,"column":24},"end":{"row":18,"column":25},"action":"remove","lines":["s"],"id":102},{"start":{"row":18,"column":23},"end":{"row":18,"column":24},"action":"remove","lines":["t"]},{"start":{"row":18,"column":22},"end":{"row":18,"column":23},"action":"remove","lines":["h"]},{"start":{"row":18,"column":21},"end":{"row":18,"column":22},"action":"remove","lines":["g"]},{"start":{"row":18,"column":20},"end":{"row":18,"column":21},"action":"remove","lines":["i"]},{"start":{"row":18,"column":19},"end":{"row":18,"column":20},"action":"remove","lines":["e"]},{"start":{"row":18,"column":18},"end":{"row":18,"column":19},"action":"remove","lines":["w"]}],[{"start":{"row":18,"column":18},"end":{"row":18,"column":19},"action":"insert","lines":["2"],"id":103},{"start":{"row":18,"column":19},"end":{"row":18,"column":20},"action":"insert","lines":["0"]}],[{"start":{"row":18,"column":19},"end":{"row":18,"column":20},"action":"remove","lines":["0"],"id":104},{"start":{"row":18,"column":18},"end":{"row":18,"column":19},"action":"remove","lines":["2"]}],[{"start":{"row":18,"column":18},"end":{"row":18,"column":19},"action":"insert","lines":["w"],"id":105},{"start":{"row":18,"column":19},"end":{"row":18,"column":20},"action":"insert","lines":["e"]},{"start":{"row":18,"column":20},"end":{"row":18,"column":21},"action":"insert","lines":["i"]},{"start":{"row":18,"column":21},"end":{"row":18,"column":22},"action":"insert","lines":["g"]},{"start":{"row":18,"column":22},"end":{"row":18,"column":23},"action":"insert","lines":["h"]},{"start":{"row":18,"column":23},"end":{"row":18,"column":24},"action":"insert","lines":["t"]},{"start":{"row":18,"column":24},"end":{"row":18,"column":25},"action":"insert","lines":["s"]}],[{"start":{"row":18,"column":27},"end":{"row":19,"column":0},"action":"insert","lines":["",""],"id":106}],[{"start":{"row":19,"column":0},"end":{"row":20,"column":0},"action":"remove","lines":["",""],"id":107}],[{"start":{"row":3,"column":41},"end":{"row":3,"column":42},"action":"remove","lines":["s"],"id":108}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":26,"column":122},"end":{"row":26,"column":122},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1729159208739}